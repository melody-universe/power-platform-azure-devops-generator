trigger: none

pool:
  vmImage: windows-latest

variables:
  - group: Credentials
  - group: Dev
  - group: ConnectionString

steps:
  - checkout: self
    persistCredentials: true
  - pwsh: |
      git checkout ("$(Build.SourceBranch)" -Replace "^refs/heads/", "")
      git config user.name "$(Build.RequestedFor)"
      git config user.email "$(Build.RequestedForEmail)"
    name: ConfigGit
  - powershell: |
      Install-Module `
        -Name Microsoft.Xrm.Tooling.CrmConnector.PowerShell `
        -Force
      Install-Module `
        -Name Microsoft.Xrm.Tooling.ConfigurationMigration `
        -Force
    name: InstallTooling
  - pwsh: mkdir "$(Pipeline.Workspace)/logs"
    name: CreateLogsDirectory
  - powershell: |
      $conn = Get-CrmConnection -ConnectionString "$(ConnectionString)"
      Export-CrmDataFile `
        -CrmConnection $conn `
        -SchemaFile "%MODULE_NAME%/schema.xml" `
        -DataFile "$(Pipeline.Workspace)/%MODULE_NAME%_data.zip" `
        -LogWriteDirectory "$(Pipeline.Workspace)/logs" `
        -EmitLogToConsole `
        -DisableTelemetry
    name: ExportData
  - task: PublishPipelineArtifact@1
    condition: always()
    inputs:
      targetPath: "$(Pipeline.Workspace)/logs"
      artifact: "logs"
      publishLocation: "pipeline"
    name: PublishLogs
  - powershell: |
      Remove-Item `
        -Path "%MODULE_NAME%/content" `
        -Recurse `
        -Force
      Expand-Archive `
        -Path "$(Pipeline.Workspace)/%MODULE_NAME%_data.zip" `
        -DestinationPath "%MODULE_NAME%/content"
  - pwsh: |
      git add .
      git commit -m "automated commit from build $(Build.BuildId)"
      git push
    name: Commit
